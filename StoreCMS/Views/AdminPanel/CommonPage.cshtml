@inject IAdminPanelPageLocalization localization
@{
    User user = Context.Items["User"] as User;
    AdminPanelPages pageID = (AdminPanelPages)Context.Items["pageID"];

    Dictionary<AdminPanelPages, string> pages = new Dictionary<AdminPanelPages, string>();
    if (SecurityFunctions.HasAccessTo(AdminPanelPages.MainPage, user, Context))
    {
        pages.Add(AdminPanelPages.MainPage, localization.MainPage);
    }
    if (SecurityFunctions.HasAccessTo(AdminPanelPages.Pages, user, Context))
    {
        pages.Add(AdminPanelPages.Pages, localization.Pages);
    }
    if (SecurityFunctions.HasAccessTo(AdminPanelPages.Categories, user, Context))
    {
        pages.Add(AdminPanelPages.Categories, localization.CategoriesAndProducts);
    }
    if (SecurityFunctions.HasAccessTo(AdminPanelPages.Templates, user, Context))
    {
        pages.Add(AdminPanelPages.Templates, localization.Templates);
    }
    if (SecurityFunctions.HasAccessTo(AdminPanelPages.Chunks, user, Context))
    {
        pages.Add(AdminPanelPages.Chunks, localization.Chunks);
    }
    if (SecurityFunctions.HasAccessTo(AdminPanelPages.FileManager, user, Context))
    {
        pages.Add(AdminPanelPages.FileManager, localization.FileManager);
    }
}
<!doctype html>
<html>
<head>
    <title>@Html.Raw(localization.Title)</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" type="text/css" href="/styles/admin_panel/common.css" />
    <link rel="stylesheet" type="text/css" href="/styles/admin_panel/admin_panel.css" />
    @if (Context.Items["PageStyle"] != null)
    {
    <link rel="stylesheet" type="text/css" href="@Html.Raw(Context.Items["PageStyle"])" />
    }
    <meta name="viewport" content="width=device-width">
</head>
<body>
    <div class="commonContainer">
        <ul class="menuBlock">
            @foreach (var p in pages)
            {
                if (pageID == p.Key)
                {
            <li class="withPadding">@Html.Raw(p.Value)</li>
                }
                else
                {
            <li><a href="@Context.Request.Path?pageID=@((int)p.Key)" class="withPadding">@Html.Raw(p.Value)</a></li>
                }
            }
        </ul>
        <content>
            @RenderBody()
        </content>
    </div>
</body>
</html>