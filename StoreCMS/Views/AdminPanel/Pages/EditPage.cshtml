@model PageModel
@inject IPagesLocalization localization
@inject CMSDatabase db
@{
    Layout = "CommonPage";
    Context.Items["PageStyle"] = "/styles/admin_panel/pages/workWithPage.css";
    var pages = db.UsualPages.Select(p => new { p.ID, Name = $"{p.Title}(ID{p.ID})", p.PreviousPageID, p.Alias });
    var templates = db.Templates.ToList();
    bool incorrect = Context.Items["IsIncorrect"] == null ? false : (bool)Context.Items["IsIncorrect"];
}
@if (incorrect)
{
            <span>@localization.IncorrectInput</span>
}
            <form method="post" class="pageContainer">
                <input type="submit" value="@Html.Raw(localization.SaveButton)" />
                <div class="leftRightBlocks">
                    <div class="leftBlock">
                        @*TITLE*@
                        <label for="Title">@Html.Raw(localization.Title)*</label>
                        <input type="text" id="Title" name="PageModel.Title" required value="@Model.Title" />
                        @*BREADCRUMB*@
                        <label for="BreadcrumbName">@Html.Raw(localization.Breadcrumb)*</label>
                        <input type="text" id="BreadcrumbName" name="PageModel.BreadcrumbName" required value="@Model.BreadcrumbName" />
                        @*PAGE DESCRIPTION*@
                        <label for="PageDescription">@Html.Raw(localization.PageDescription)</label>
                        <input type="text" id="PageDescription" name="PageModel.PageDescription" maxlength="160" value="@Model.PageDescription">
                        @*PAGE KEYWORDS*@
                        <label for="PageKeywords">@Html.Raw(localization.PageKeywords)</label>
                        <input type="text" id="PageKeywords" name="PageModel.PageKeywords" value="@Model.PageKeywords" />
                    </div>
                    <div class="rightBlock">
                        @*TEMPLATE*@
                        <label for="TemplateId">@Html.Raw(localization.Template)</label>
                        <select id="TemplateId" name="PageModel.TemplateId" required>
                        @if (!Model.TemplateId.HasValue)
                        {
                            <option selected>@Html.Raw(localization.WithoutTemplate)</option>
                        }
                        else
                        {
                            <option>@Html.Raw(localization.WithoutTemplate)</option>
                        }
                        @foreach (var t in templates)
                        {
                            if (Model.TemplateId.HasValue && t.ID == Model.TemplateId.Value)
                            {
                            <option value="@t.ID" selected>@Html.Raw(t.Name)</option>
                            }
                            else
                            {
                            <option value="@t.ID">@Html.Raw(t.Name)</option>
                            }
                        }
                        </select>
                        @*PAGE TYPE*@
                        <label for="PageType">@Html.Raw(localization.PageType)</label>
                        @if (Model.PageType == PageType.Usual)
                        {
                        <input type="text" id="PageType" value="@Html.Raw(localization.Usual)" disabled />
                        }
                        else if (Model.PageType == PageType.Category)
                        {
                        <input type="text" id="PageType" value="@Html.Raw(localization.Category)" disabled />
                        }
                        @*PREVIOUS PAGE*@
                        <label for="PreviousPage">@Html.Raw(localization.PreviousPage)</label>
                        <select id="PreviousPage" name="PageModel.PreviousPageID" required>
                        @if (!Model.PreviousPageID.HasValue)
                        {
                            <option selected>@Html.Raw(localization.WithoutPreviousPage)</option>
                        }
                        else
                        {
                            <option>@Html.Raw(localization.WithoutPreviousPage)</option>
                        }
                        @foreach (var p in pages)
                        {
                            if (Model.PreviousPageID == p.PreviousPageID && Model.Alias.Equals(p.Alias))
                            {
                                continue;
                            }
                            if (Model.PreviousPageID.HasValue && p.ID == Model.PreviousPageID.Value)
                            {
                            <option value="@p.ID" selected>@Html.Raw(p.Name)</option>
                            }
                            else
                            {
                            <option value="@p.ID">@Html.Raw(p.Name)</option>
                            }
                        }
</select>
                        @*ALIAS*@
                        <label for="Alias">@Html.Raw(localization.Alias)</label>
                        <input type="text" id="Alias" name="PageModel.Alias" value="@Model?.Alias" />
                        @*IS MAIN PAGE?*@
                        @if (Model.IsMainPage)
                        {
                        <div class="checkboxBlock">
                            <input type="checkbox" id="IsMainPage" name="PageModel.IsMainPage" value="true" checked="checked" />
                            <label for="IsMainPage">@Html.Raw(localization.IsMainPage)</label>
                        </div>
                        }
                        @*IS PUBLISHED?*@
                        <div class="checkboxBlock">
                        @if (Model.Published)
                        {
                            <input type="checkbox" id="Published" name="PageModel.Published" value="true" checked="checked" />
                        }
                        else
                        {
                            <input type="checkbox" id="Published" name="PageModel.Published" value="true" />
                        }
                            <label for="Published">@Html.Raw(localization.Published)</label>
                        </div>
                        @*IS ROBOT INDEX?*@
                        <div class="checkboxBlock">
                        @if (Model.IsRobotIndex)
                        {
                            <input type="checkbox" id="IsRobotIndex" name="PageModel.IsRobotIndex" value="true" checked="checked" />
                        }
                        else
                        {
                            <input type="checkbox" id="IsRobotIndex" name="PageModel.IsRobotIndex" value="true" />
                        }
                            <label for="IsRobotIndex">@Html.Raw(localization.IsRobotIndex)</label>
                        </div>
                    </div>
                </div>
                @*CONTENT*@
                <label for="Content">@Html.Raw(localization.Content)</label>
                <textarea id="Content" name="PageModel.Content">@Model?.Content</textarea>
            </form>