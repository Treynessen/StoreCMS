@using Microsoft.AspNetCore.Hosting;
@using Treynessen.Extensions;
@model List<ProductPage>
@inject IHostingEnvironment env
@inject ICategoriesAndProductsLocalization localization
@{
    Layout = "CommonPage";
    Context.Items["PageStyle"] = "/styles/admin_panel/categories_and_products/category_products.css";
    int categoryID = (int)Context.Items["itemID"];
    string categoryName = Context.Items["categoryName"] as string;
    Context.Items["PageName"] = $"{localization.CategoryProductsPageName} {categoryName}";
    User user = Context.Items["User"] as User;
}
<script src="/scripts/admin_panel/send_data.js"></script>
@if (SecurityFunctions.HasAccessTo(AdminPanelPages.AddProduct, user, Context))
{
<div class="add-product-button">
                <a href="@Context.Request.Path?pageID=@((int)AdminPanelPages.AddProduct)&itemID=@categoryID">@Html.Raw($"{localization.AddProductInCategory} <b>{categoryName}</b>")</a>
            </div>
}
            <table>
                <tr>
                    <td></td>
                    <td>@Html.Raw(localization.Name)</td>
                    <td>URL</td>
                    <td>@Html.Raw(localization.Actions)</td>
                </tr>
                @foreach (var p in Model)
                {
                <tr>
                    <td><image src="@Html.Raw($"{env.GetProductsImagesFolderSrc()}{p.PreviousPageID.ToString()}{p.ID.ToString()}/{p.Alias}.jpg")" max-height="150" max-width="150" quality="50"></image></td>
                    <td>@Html.Raw($"{p.PageName} <b>(ID{p.ID.ToString()})</b>")</td>
                    <td>@Html.Raw(p.RequestPath)</td>
                    <td>
                @if (SecurityFunctions.HasAccessTo(AdminPanelPages.EditProduct, user, Context))
                {
                        <form method="get">
                            <input type="hidden" name="pageID" value="@((int)AdminPanelPages.EditProduct)" />
                            <input type="hidden" name="itemID" value="@p.ID">
                            <input type="submit" class="action-button" value="@Html.Raw(localization.EditProduct)" />
                        </form>
                }
                @if (SecurityFunctions.HasAccessTo(AdminPanelPages.ProductImages, user, Context))
                {
                        <form method="get">
                            <input type="hidden" name="pageID" value="@((int)AdminPanelPages.ProductImages)" />
                            <input type="hidden" name="itemID" value="@p.ID">
                            <input type="submit" class="action-button" value="@Html.Raw(localization.ProductImages)" />
                        </form>
                }
                @if (SecurityFunctions.HasAccessTo(AdminPanelPages.DeleteProduct, user, Context))
                {
            <form id="delete-product-form-@p.ID">
                            <input type="hidden" name="itemID" value="@p.ID">
                            <input id="delete-product-button-@p.ID" type="submit" class="action-button" value="@Html.Raw(localization.DeleteProduct)" />
                        </form>
                        <script>
                            let deleteProductButton_@p.ID = document.getElementById('delete-product-button-@p.ID');
                            deleteProductButton_@(p.ID).addEventListener('click', createSendDataEventHandler('DELETE', '?pageID=@((int)AdminPanelPages.DeleteProduct)', 'delete-product-form-@p.ID', () => { alert('@Html.Raw(localization.ProductDeleted)'); location.reload(); }))
                        </script>
                }
                    </td>
                </tr>
    }
            </table>