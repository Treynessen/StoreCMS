@using Treynessen.FileManagerManagement;
@inject IFileManagerLocalization localization;
@model FileManagerObject[]
@{
    Layout = "CommonPage";
    Context.Items["PageStyle"] = "/styles/admin_panel/file_manager/index.css";
    Context.Items["PageName"] = localization.FileManagerPageName;
    LinkedList<KeyValuePair<string, string>> breadcrumbs = Context.Items["CurrentDirectoryBreadcrumbs"] as LinkedList<KeyValuePair<string, string>>;
    // Key - название, Value - путь
    User user = Context.Items["User"] as User;
}
<script src="/scripts/admin_panel/send_data.js"></script>
            <script>
                function fileOrFolderDeletionResponse(request) {
                    if (request.status == 200) {
                        alert('@Html.Raw(localization.Deleted)');
                        location.replace(request.getResponseHeader('location'));
                    }
                    else if (request.status == 404) {
                        alert('@Html.Raw(localization.IncorrectRequest)');
                    }
                }
            </script>
            <div class="breadcrumb-list">
            @for (LinkedListNode<KeyValuePair<string, string>> node = breadcrumbs.First; node != null; node = node.Next)
            {
                if (node.Next != null)
                {
                <a href="@Context.Request.Path?pageID=@((int)AdminPanelPages.FileManager)@(!string.IsNullOrEmpty(node.Value.Value) ? $"&path={node.Value.Value}" : string.Empty)">@Html.Raw(node.Value.Key)</a>
                }
                else
                {
                <div>@Html.Raw(node.Value.Key)</div>
                }
            }
            </div>
            @if (SecurityFunctions.HasAccessTo(AdminPanelPages.UploadFile, user, Context))
            {
                <script src="/scripts/admin_panel/send_file.js"></script>
                <form id="upload-file">
                    <input type="hidden" name="pageID" value="@((int)AdminPanelPages.UploadFile)">
                    <input type="hidden" name="path" value="@Html.Raw(breadcrumbs.Last.Value.Value)">
                    <div class="input-file-button">
                        <label for="upload-file-button">@Html.Raw(localization.UploadFile)</label>
                        <input type="file" id="upload-file-button" name="uploadedFile" accept=".png, .jpg, .jpeg, .bmp, .gif, .webp, .css, .js, .ico" />
                    </div>
                </form>
                <script>
                    function errorHandler() {
                        alert('@Html.Raw(localization.UnsuccessfulFileUpload)');
                    }
                    function responseHandler(request) {
                        if (request.status == 200) {
                            alert('@Html.Raw(localization.FileUploaded)');
                            location.reload();
                        }
                        else if (request.status == 415) {
                            errorHandler();
                        }
                    }
                    document.getElementById('upload-file-button').addEventListener('change', createSendFileEventHandler('upload-file', responseHandler, errorHandler,'.png', '.jpg', '.jpeg', '.bmp', '.gif', '.webp', '.css', '.js', '.ico'));
                </script>
            }
            <div class="action-list">
            @if (SecurityFunctions.HasAccessTo(AdminPanelPages.CreateFolder, user, Context))
            {
    <form id="create-folder">
                    <input type="hidden" name="pageID" value="@((int)AdminPanelPages.CreateFolder)" />
                    <input type="hidden" name="path" value="@Html.Raw(breadcrumbs.Last.Value.Value)" />
                    <input id="create-folder-button" type="submit" value="@Html.Raw(localization.Create)" />
                    <input type="text" name="name" placeholder="@Html.Raw(localization.FolderName)" />
                </form>
                <script>
                    function folderCreationResponse(request) {
                        if (request.status == 201) {
                            alert('@Html.Raw(localization.FolderCreated)');
                            location.reload();
                        }
                        else if (request.status == 422) {
                            alert('@Html.Raw(localization.IncorrectRequest)');
                        }
                    }
                    document.getElementById('create-folder-button').addEventListener('click', createSendDataEventHandler('POST', 'create-folder', folderCreationResponse));
                </script>
            }
            @if (SecurityFunctions.HasAccessTo(AdminPanelPages.CreateStyle, user, Context))
            {
    <form id="create-style">
                    <input type="hidden" name="pageID" value="@((int)AdminPanelPages.CreateStyle)" />
                    <input type="hidden" name="path" value="@Html.Raw(breadcrumbs.Last.Value.Value)" />
                    <input id="create-style-button" type="submit" value="@Html.Raw(localization.Create)" />
                    <input type="text" name="name" placeholder="@Html.Raw(localization.CssFileName)" />
                </form>
                <script>
                    function styleCreationResponse(request) {
                        if (request.status == 201) {
                            alert('@Html.Raw(localization.StyleFileCreated)');
                            location.reload();
                        }
                        else if (request.status == 422) {
                            alert('@Html.Raw(localization.IncorrectRequest)');
                        }
                    }
                    document.getElementById('create-style-button').addEventListener('click', createSendDataEventHandler('POST', 'create-style', styleCreationResponse));
                </script>
            }
            @if (SecurityFunctions.HasAccessTo(AdminPanelPages.CreateScript, user, Context))
            {
    <form id="create-script">
                    <input type="hidden" name="pageID" value="@((int)AdminPanelPages.CreateScript)" />
                    <input type="hidden" name="path" value="@Html.Raw(breadcrumbs.Last.Value.Value)" />
                    <input id="create-script-button" type="submit" value="@Html.Raw(localization.Create)" />
                    <input type="text" name="name" placeholder="@Html.Raw(localization.ScriptFileName)" />
                </form>
                <script>
                    function scriptCreationResponse(request) {
                        if (request.status == 201) {
                            alert('@Html.Raw(localization.ScriptFileCreated)');
                            location.reload();
                        }
                        else if (request.status == 422) {
                            alert('@Html.Raw(localization.IncorrectRequest)');
                        }
                    }
                    document.getElementById('create-script-button').addEventListener('click', createSendDataEventHandler('POST', 'create-script', scriptCreationResponse));
                </script>
            }
            </div>
            <table>
                <tr>
                    <td>@Html.Raw(localization.Name)</td>
                    <td></td>
                </tr>
                @{ int it = 1; }
            @foreach (var f in Model)
            {
                <tr>
            @if (f.Type == FileManagerObjectType.Folder)
            {
                    <td><a href="@Context.Request.Path?pageID=@((int)AdminPanelPages.FileManager)&path=@f.ShortPath">@Html.Raw(localization.Folder): <b>@Html.Raw(f.Name)</b></a></td>
            }
            else if (f.Type == FileManagerObjectType.Image)
            {
                    <td><a href="/@f.ShortPath.Replace('>', '/')">@Html.Raw(localization.Image): <b>@Html.Raw(f.Name)</b></a></td>
            }
            else if (f.Type == FileManagerObjectType.Script)
            {
                if (SecurityFunctions.HasAccessTo(AdminPanelPages.EditScript, user, Context))
                {
                    <td><a href="@Context.Request.Path?pageID=@((int)AdminPanelPages.EditScript)&path=@f.ShortPath">@Html.Raw(localization.Script): <b>@Html.Raw(f.Name)</b></a></td>
                }
                else
                {
                    <td><a href="/@f.ShortPath.Replace('>', '/')">@Html.Raw(localization.Script): <b>@Html.Raw(f.Name)</b></a></td>
                }
            }
            else
            {
                if (SecurityFunctions.HasAccessTo(AdminPanelPages.EditStyle, user, Context))
                {
                    <td><a href="@Context.Request.Path?pageID=@((int)AdminPanelPages.EditStyle)&path=@f.ShortPath">@Html.Raw(localization.Style): <b>@Html.Raw(f.Name)</b></a></td>
                }
                else
                {
                    <td><a href="/@f.ShortPath.Replace('>', '/')">@Html.Raw(localization.Style): <b>@Html.Raw(f.Name)</b></a></td>
                }
            }
                    <td>
                @if (SecurityFunctions.HasAccessTo(AdminPanelPages.DeleteFileOrFolder, user, Context))
                {
                    if (f.CanDelete)
                    {
                        <form id="delete-file-or-folder-@it">
                            <input type="hidden" name="pageID" value="@((int)AdminPanelPages.DeleteFileOrFolder)" />
                            <input type="hidden" name="path" value="@Html.Raw(f.ShortPath)" />
                            <input id="delete-file-or-folder-button-@it" type="submit" class="delete-button" value="@Html.Raw(localization.Delete)" />
                        </form>
                        <script>
                            document.getElementById('delete-file-or-folder-button-@(it)').addEventListener('click', createSendDataEventHandler('DELETE', 'delete-file-or-folder-@(it)', fileOrFolderDeletionResponse));
                        </script>
                    }
                    else
                    {
                        <input type="submit" class="disabled-delete-button" disabled value="@Html.Raw(localization.Delete)" />
                    }
                }
                    </td>
                </tr>
                    ++it;
                }
            </table>