@model Page
@{ List<ProductPage> products = Context.Items["products"] as List<ProductPage>; }
<div class="sort-panel"><span>Сортировать цены по: <b class="sort-menu"></b></span></div>
<div class="content-block">
<div class="navigation-menu">@(Model != null ? Html.Raw(Model.BreadcrumbsHtml) : Html.Raw(string.Empty)) → @(Model != null ? Html.Raw(Model.PageName) : Html.Raw(string.Empty))</div>
@(Model != null ? Html.Raw(Model.Content) : Html.Raw(string.Empty))
@{ if (products != null) { foreach (var p in products) { try { @await Html.PartialAsync(@"~/Settings/product_block.cshtml", p); } catch { } } } }

@{ if (products != null) { <page-buttons class="@Context.Items["PaginationStyleName"]" current-path="@Context.Request.Path" order-by="@(Context.Items["OrderBy"] as OrderBy?)" current-page="@(Context.Items["CurrentPage"] as int?)" pages-count="@(Context.Items["PagesCount"] as int?)"></page-buttons> } }
</div>
